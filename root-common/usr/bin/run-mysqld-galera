#!/bin/bash
#
# This is an entrypoint that runs the MySQL server in the 'multi-master' mode.
#

export_vars=$(cgroup-limits); export $export_vars
source ${CONTAINER_SCRIPTS_PATH}/common.sh
set -eu
if [[ -v DEBUG_IGNORE_SCRIPT_FAILURES ]]; then
  set +e
fi

export_setting_variables

log_volume_info $MYSQL_DATADIR

export MYSQL_RUNNING_AS_GALERA=1
export MYSQLD_OPTS="$@"

# pre-init files
process_extending_files ${APP_DATA}/mysql-pre-init/ ${CONTAINER_SCRIPTS_PATH}/pre-init/

if [ ! -d "$MYSQL_DATADIR/mysql" ]; then
  initialize_database "$@"
else
  start_local_mysql "$@"
fi

# init files
process_extending_files ${APP_DATA}/mysql-init/ ${CONTAINER_SCRIPTS_PATH}/init/

# Restart the MySQL server with public IP bindings
shutdown_local_mysql

# if some of the nodes already operate, do not bootstrap cluster again
if any_cluster_node_on ; then
  log_info "Some nodes already working."
  if [[ "${MYSQLD_OPTS}" =~ --wsrep-new-cluster ]] ; then
    log_info "Removing --wsrep-new-cluster argument."
    MYSQLD_OPTS=$(filter_cluster_init_opt "${MYSQLD_OPTS}")
  fi
else
  log_info "No nodes seem to be operating yet."
  if ! [[ "${MYSQLD_OPTS}" =~ --wsrep-new-cluster ]] ; then
    log_info "For initialization of a new cluster, run the container with --wsrep-new-cluster argument."
  fi
fi

# make sure list of nodes includes this node address
export MYSQL_CLUSTER_NODES_FIXED=$(get_cluster_nodes_list_opt)
log_info "List of cluster nodes: ${MYSQL_CLUSTER_NODES_FIXED}"
envsubst < ${CONTAINER_SCRIPTS_PATH}/init/my-galera.cnf.template > /etc/my.cnf.d/galera.cnf

unset_env_vars
log_volume_info $MYSQL_DATADIR
log_info 'Running final exec -- Only MySQL server logs after this point'
exec ${MYSQL_PREFIX}/libexec/mysqld --defaults-file=$MYSQL_DEFAULTS_FILE "$@" 2>&1
